/*================================================================================

    csmi/include/csm_types/struct_defs/inv/csmi_node_details.def

  Â© Copyright IBM Corporation 2015-2017. All Rights Reserved

    This program is licensed under the terms of the Eclipse Public License
    v1.0 as published by the Eclipse Foundation and available at
    http://www.eclipse.org/legal/epl-v10.html

    U.S. Government Users Restricted Rights:  Use, duplication or disclosure
    restricted by GSA ADP Schedule Contract with IBM Corp.

================================================================================*/

/**
 * CSMI_COMMENT
 * @brief Aggregates **csm_node** table and sister tables in the CSM Database.
 * Consult each struct array for nodes contained in this structure.
 */

#ifndef CSMI_STRUCT_NAME
    #define CSMI_STRUCT_NAME csmi_node_details_t
    
    #undef CSMI_BASIC              
    #undef CSMI_STRING             
    #undef CSMI_STRING_FIXED       
    #undef CSMI_ARRAY              
    #undef CSMI_ARRAY_FIXED        
    #undef CSMI_ARRAY_STR          
    #undef CSMI_ARRAY_STR_FIXED    
    #undef CSMI_STRUCT             
    #undef CSMI_ARRAY_STRUCT       
    #undef CSMI_ARRAY_STRUCT_FIXED 
    #undef CSMI_NONE  
    
    #define CSMI_BASIC               1
    #define CSMI_STRING              0
    #define CSMI_STRING_FIXED        0
    #define CSMI_ARRAY               0
    #define CSMI_ARRAY_FIXED         0
    #define CSMI_ARRAY_STR           0
    #define CSMI_ARRAY_STR_FIXED     0
    #define CSMI_STRUCT              1
    #define CSMI_ARRAY_STRUCT        1
    #define CSMI_ARRAY_STRUCT_FIXED  0
    #define CSMI_NONE                0
#endif 

// CSMI_STRUCT_MEMBER(type, name, serial_type, length_member, init_value, extra ) /**< comment */
CSMI_VERSION_START(CSM_VERSION_0_4_1)

CSMI_STRUCT_MEMBER(uint32_t, dimms_count     , BASIC, , 0, ) /**< Number of dimms associated with @ref node, size of @ref dimms. */
CSMI_STRUCT_MEMBER(uint32_t, gpus_count      , BASIC, , 0, ) /**< Number of gpus associated with @ref node, size of @ref gpus.*/
CSMI_STRUCT_MEMBER(uint32_t, hcas_count      , BASIC, , 0, ) /**< Number of hcas associated with @ref node, size of @ref hcas.*/
CSMI_STRUCT_MEMBER(uint32_t, processors_count, BASIC, , 0, ) /**< Number of processors associated with @ref node, size of @ref processors.*/
CSMI_STRUCT_MEMBER(uint32_t, ssds_count      , BASIC, , 0, ) /**< Number of ssds associated with @ref node, size of @ref ssds. */
CSMI_STRUCT_MEMBER(csmi_node_attributes_record_t*, node      , STRUCT      ,                 , NULL, csmi_node_attributes_record_t) /**< Basic information for the node. */
CSMI_STRUCT_MEMBER(csmi_dimm_record_t**          , dimms     , ARRAY_STRUCT, dimms_count     , NULL, csmi_dimm_record_t           ) /**< The dimms associated with @ref node, size defined by @ref dimms_count.*/
CSMI_STRUCT_MEMBER(csmi_gpu_record_t**           , gpus      , ARRAY_STRUCT, gpus_count      , NULL, csmi_gpu_record_t            ) /**< The gpus associated with @ref node, size defined by @ref gpus_count.*/ 
CSMI_STRUCT_MEMBER(csmi_hca_record_t**           , hcas      , ARRAY_STRUCT, hcas_count      , NULL, csmi_hca_record_t            ) /**< The hcas associated with @ref node, size defined by @ref hcas_count.*/
CSMI_STRUCT_MEMBER(csmi_processor_record_t**     , processors, ARRAY_STRUCT, processors_count, NULL, csmi_processor_record_t      ) /**< The processors associated with @ref node, size defined by @ref processors_count.*/
CSMI_STRUCT_MEMBER(csmi_ssd_record_t**           , ssds      , ARRAY_STRUCT, ssds_count      , NULL, csmi_ssd_record_t            ) /**< The ssds associated with @ref node, size defined by @ref ssds_count.*/

CSMI_VERSION_END(0481c5178acd96d62bf0fd1d528143f1)
#undef CSMI_VERSION_START
#undef CSMI_VERSION_END
#undef CSMI_STRUCT_MEMBER
