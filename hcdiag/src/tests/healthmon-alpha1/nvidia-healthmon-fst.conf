;;;
;;; The global section contains configurations that apply to all devices
;;;
[global]

;;
;; Enable this setting to ensure that the expected number of Tesla brand GPUs
;; are detected by the NVML library.
;;
;; This count only includes Tesla brand GPUs that the nvidia-healthmon
;; process has sufficient permission to access.
;;
;; If this setting is not configured, then checks that require it will skip
;;
devices.tesla.count = 4

;;
;; nvidia-healthmon checks the system for drivers that have been known to
;; cause issues with NVIDIA hardware, drivers, and software. The following
;; list contains the names of drivers which are known to cause problems.
;; If nvidia-healthmon detects any blacklisted drivers it will not
;; execute further tests.
;;
;; You may add/remove drivers on this list at your own risk.
;;
;; If this setting is not configured, then checks that require it will skip
;;
;
drivers.blacklist = nouveau

;;
;; Enable this setting to display the GPUDirect communication matrix between
;; all P2P/RDMA devices on the system.  Enumeration of GPUs is according to NVML.
display.gpudirect = 1

;; Enable this setting to activate RDMA testing features.  See the per device
;; keys below.  Also, though bandwidth information will be correct,
;; path information will be inaccurate without the display.gpudirect key
;; also set.
rdma.enable = 1

;; Set this to give an expected Nvidia driver version, a mismatch fails
; version.driver = 340.00

;;;
;;; The configuration in each device section only applies to devices of that SKU
;;; Below is an explanation of all fields that can be set in the device section
;;;
;
;[Tesla K20m]
;
;; Each device section starts with the name of the device
;; Run nvidia-smi to determine the name of your GPU
;
;; Bandwidth configuration
;
;; nvidia-healthmon can check the PCIe bandwidth between the pinned host
;; memory and GPU memory
;; If the bandwidth from the host to GPU or from the GPU to the host is
;; below this value (in MB/s), nvidia-healthmon will generate a warning
;;
;; If this setting is not configured, then checks that require it will skip
;
;bandwidth.warn = 1500
;
;
;; nvidia-healthmon can check the PCIe bandwidth between the pinned host
;; memory and GPU memory
;; If the bandwidth from the host to GPU or from the GPU to the host is
;; below this value (in MB/s), nvidia-healthmon will generate an error
;;
;; If this setting is not configured, then checks that require it will skip
;
;bandwidth.min = 100
;
;
;; Peer to Peer configuration
;
;; nvidia-healthmon can check whether peer to peer access is supported between
;; GPUs on the same host.  It can then run a bandwidth test between two GPUs.
;; In the case that peer access is supported, if the bandwidth from one GPU to
;; the other GPU is supported is below this value (in MB/s), nvidia-healthmon
;; will generate a warning.  If peer to peer access is not supported, the
;; bandwidth test is still run, but no comparison to the minimum bandwidth is
;; done.
;
;peer.bandwidth.warn = 8000
;
;
;; nvidia-healthmon can check whether peer to peer access is supported between
;; GPUs on the same host.  It can then run a bandwidth test between two GPUs.
;; In the case that peer access is supported, if the bandwidth from one GPU to
;; the other GPU is supported is below this value (in MB/s), nvidia-healthmon
;; will generate an error.  If peer to peer access is not supported, the
;; bandwidth test is still run, but no comparison to the minimum bandwidth is
;; done.
;
;peer.bandwidth.min = 5000
;
;; PCIe link configuration
;
;; nvidia-healthmon can compare the maximum PCIe link generation for the PCIe
;; link closest to the GPU chip against the value specified here.
;;
;; If this setting is not configured, then checks that require it will skip
;; An error will be generated if there is a mismatch
;;
;; For GPU board that contain multiple GPU chips, this value will reflect
;; the PCIe link generation between the GPU chip and an on board PCIe switch.
;; For single GPU boards this value reflects the link width between the GPU
;; chip and the PCIe slot the GPU is connected to.
;; Note that additional PCIe links upstream from the GPU may have a
;; different link generation.  Those links are not considered here.
;;
;; Because PCIe link generation is dependent on the non-GPU side
;; of the link, knowledge of the system's capability is required to set the
;; correct expectations. Consequently this config file disables
;; this test for each GPU by default.
;;
;
;pci.gen = 1
;
;
;; nvidia-healthmon can compare the maximum PCIe link width for the PCIe
;; link closest to the GPU chip against the value specified here.
;;
;; If this setting is not configured, then checks that require it will skip
;; An error will be generated if there is a mismatch
;;
;; For GPU board that contain multiple GPU chips, this value will reflect
;; the PCIe link width between the GPU chip and an on board PCIe switch.
;; For single GPU boards this value reflects the link width  between the GPU
;; chip and the PCIe slot the GPU is connected to.
;; Note that additional PCIe links upstream from the GPU may have a
;; different link width.  Those links are not considered here
;
;pci.width = 16
;
;; nvidia-healthmon can compare the current GPU die temperature to a warning
;; level in degrees Celsius.  A warning will be generated if the current
;; temperature is at or above the warning level
;;
;; Note that the desired temperature may vary based on the cooling system used
;;
;; If this setting is not configured, then checks that require it will skip
;
;temperature.warn = 95
;

;; RDMA configuration
;
;; nvidia-healthmon can perform RDMA testing to measure the bandwidth between a
;; Mellanox Infiniband NIC and a GPU.  The tests are activated via the
;; rdma.enable key in the global section.  rdma.mlxdev is the Mellanox device
;; ID given by ibstat.  rdma.mlxport is the port number you wish to perform the test
;; on.  Though this is strictly a loopback test, the port must be active and link
;; up for the test to work correctly.
; rdma.mlxdev = mlx5_0
; rdma.mlxport = 1


;; In the case that RDMA access is supported, if the RDMA unidirectional bandwidth
;; is below this value (in MB/s), nvidia-healthmon will generate a warning.
;; RDMA bandwidths will be highly dependent on the exact host bridge version and
;; architecture.
;; This is an optional parameter.
;
;rdma.bandwidth.warn = 8000
;
;
;; In the case that RDMA access is supported, if the RDMA unidirectional bandwidth
;; is below this value (in MB/s), nvidia-healthmon will generate an error.
;; RDMA bandwidths will be highly dependent on the exact host bridge version and
;; architecture.
;; This is an optional parameter.
;
;rdma.bandwidth.min = 5000

;; nvidia-healthmon can check to make sure a device's vBios version is an
;; expected value.  This can be a single value or a comma-separated list of values
; version.vbios = 80.80.24.00.07

;; Set this to check the ECC state of a device and consider a mismatch
;; with this parameter to be a failure. If this parameter is provided, it
;; must be one of the following:
;; 0 = expect ECC to be disabled on this device
;; 1 = expect ECC to be enabled on this device
;; If this parameter is provided and a device does not support getting its
;; ECC state, it will be considered a test failure
;ecc.check_state = 1

;;;
;;; NVIDIA provides default configuration for various settings of various GPUs
;;;
;;; Some fields provide conservative maximum expected values
;;; Some fields are highly system specific, so no default is provided
;;; Please adjust these values as needed based on local system configuration
;;;


[Tesla K80]
; See [Tesla K20] section for an explanation of defaults
bandwidth.warn = 5000
;bandwidth.min = 5000
peer.bandwidth.warn = 5000
;peer.bandwidth.min = 5000
pci.gen = 3
pci.width = 16
temperature.warn = 90
ecc.check_state = 1
