/*================================================================================

    csmi/include/csm_types/struct_defs/wm/csmi_allocation_step_mcast_context.def

  Â© Copyright IBM Corporation 2015-2017. All Rights Reserved

    This program is licensed under the terms of the Eclipse Public License
    v1.0 as published by the Eclipse Foundation and available at
    http://www.eclipse.org/legal/epl-v10.html

    U.S. Government Users Restricted Rights:  Use, duplication or disclosure
    restricted by GSA ADP Schedule Contract with IBM Corp.

================================================================================*/

/**
 * CSMI_INTERNAL

 * CSMI_COMMENT
 * @brief A context struct for storing multicast contexts.
 */

#ifndef CSMI_STRUCT_NAME
    #define CSMI_STRUCT_NAME csmi_allocation_step_mcast_context_t
    
    #undef CSMI_BASIC              
    #undef CSMI_STRING             
    #undef CSMI_STRING_FIXED       
    #undef CSMI_ARRAY              
    #undef CSMI_ARRAY_FIXED        
    #undef CSMI_ARRAY_STR          
    #undef CSMI_ARRAY_STR_FIXED    
    #undef CSMI_STRUCT             
    #undef CSMI_ARRAY_STRUCT       
    #undef CSMI_ARRAY_STRUCT_FIXED 
    #undef CSMI_NONE  
    
    #define CSMI_BASIC               1
    #define CSMI_STRING              1
    #define CSMI_STRING_FIXED        0
    #define CSMI_ARRAY               0
    #define CSMI_ARRAY_FIXED         0
    #define CSMI_ARRAY_STR           1
    #define CSMI_ARRAY_STR_FIXED     0
    #define CSMI_STRUCT              0
    #define CSMI_ARRAY_STRUCT        0 
    #define CSMI_ARRAY_STRUCT_FIXED  0
    #define CSMI_NONE                0
#endif 

// CSMI_STRUCT_MEMBER(type, name, serial_type, length_member, init_value, extra ) /**< comment */
CSMI_VERSION_START(CSM_VERSION_0_4_1)

CSMI_STRUCT_MEMBER( int64_t , step_id      ,  BASIC, ,    0, ) /**< The identifier of the step, combined with @ref allocation_id to form a unique identifier. */
CSMI_STRUCT_MEMBER( int64_t , allocation_id,  BASIC, ,    0, ) /**< Allocation that the step is a member of, when combined with @ref step_id represents a unique step.*/
CSMI_STRUCT_MEMBER( int32_t , num_nodes    ,  BASIC, ,    0, ) /**< Number of nodes, size of @ref compute_nodes.*/
CSMI_STRUCT_MEMBER( char    , begin        ,  BASIC, ,    0, ) /**< A flag indicating whether this is a begin or end payload. */
CSMI_STRUCT_MEMBER( char*   , user_flags   , STRING, , NULL, ) /**< User prolog/epilog flags. If NULL the prolog and epilog are not to be run.*/
CSMI_STRUCT_MEMBER( char**  , compute_nodes, ARRAY_STR, num_nodes, NULL, ) /**< The list of nodes associated with this step. Used to populate the *csm_step_node* table of the CSM DB. Size stored in @ref num_nodes.*/
CSMI_VERSION_END(38b2fb2e0eef7c4d9bd61e47bfa5d54b)
#undef CSMI_VERSION_START
#undef CSMI_VERSION_END
#undef CSMI_STRUCT_MEMBER

