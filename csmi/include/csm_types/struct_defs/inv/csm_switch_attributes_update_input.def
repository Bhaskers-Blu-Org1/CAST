/*================================================================================

    csmi/include/csm_types/struct_defs/inv/csm_switch_attributes_update_input.def

  Â© Copyright IBM Corporation 2015-2018. All Rights Reserved

    This program is licensed under the terms of the Eclipse Public License
    v1.0 as published by the Eclipse Foundation and available at
    http://www.eclipse.org/legal/epl-v10.html

    U.S. Government Users Restricted Rights:  Use, duplication or disclosure
    restricted by GSA ADP Schedule Contract with IBM Corp.

================================================================================*/

/**
 * CSMI_COMMENT
 * @brief An input wrapper for @ref csm_switch_attributes_update.
 */

#ifndef CSMI_STRUCT_NAME
    #define CSMI_STRUCT_NAME csm_switch_attributes_update_input_t
    
    #undef CSMI_BASIC              
    #undef CSMI_STRING             
    #undef CSMI_STRING_FIXED       
    #undef CSMI_ARRAY              
    #undef CSMI_ARRAY_FIXED        
    #undef CSMI_ARRAY_STR          
    #undef CSMI_ARRAY_STR_FIXED    
    #undef CSMI_STRUCT             
    #undef CSMI_ARRAY_STRUCT       
    #undef CSMI_ARRAY_STRUCT_FIXED 
    #undef CSMI_NONE  
    
    #define CSMI_BASIC               1
    #define CSMI_STRING              1
    #define CSMI_STRING_FIXED        0
    #define CSMI_ARRAY               0
    #define CSMI_ARRAY_FIXED         0
    #define CSMI_ARRAY_STR           1
    #define CSMI_ARRAY_STR_FIXED     0
    #define CSMI_STRUCT              0
    #define CSMI_ARRAY_STRUCT        0
    #define CSMI_ARRAY_STRUCT_FIXED  0
    #define CSMI_NONE                0
#endif 

// CSMI_STRUCT_MEMBER(type, name, serial_type, length_member, init_value, extra ) /**< comment */
CSMI_VERSION_START(CSM_VERSION_0_4_1)

CSMI_STRUCT_MEMBER(uint32_t, switch_names_count     , BASIC    ,                   , 0   , ) /**< Number of switch records to update, size of @ref switch_names. */
CSMI_STRUCT_MEMBER(char*   , comment                , STRING   ,                   , NULL, ) /**< System administrator comment field for this switch. API will ignore NULL values for this field. if this field is left as NULL, then the API will keep the current value that is in the database. Can be reset to NULL in CSM DB via \"#CSM_NULL\".*/
CSMI_STRUCT_MEMBER(char*   , physical_frame_location, STRING   ,                   , NULL, ) /**< the frame where the switch is located. API will ignore NULL values for this field. if this field is left as NULL, then the API will keep the current value that is in the database. */
CSMI_STRUCT_MEMBER(char*   , physical_u_location    , STRING   ,                   , NULL, ) /**< the u number in the frame where the switch is located. API will ignore NULL values for this field. if this field is left as NULL, then the API will keep the current value that is in the database. */
CSMI_STRUCT_MEMBER(char*   , state                  , STRING   ,                   , NULL, ) /**< Deprecated after CSM_VERSION_0_4_1. Update the 'state' field in the database. API will ignore NULL values for this field. if this field is left as NULL, then the API will keep the current value that is in the database. Valid Values: (active, error, missing, soft failure, service )*/
CSMI_STRUCT_MEMBER(char**  , switch_names           , ARRAY_STR, switch_names_count, NULL, ) /**< List of switches to update in the database, one or more switches mus be specified. Size defined by @ref switch_names_count.*/

CSMI_VERSION_END(031322156a7f3d2b1b42476743d22581)
#undef CSMI_VERSION_START
#undef CSMI_VERSION_END
#undef CSMI_STRUCT_MEMBER

