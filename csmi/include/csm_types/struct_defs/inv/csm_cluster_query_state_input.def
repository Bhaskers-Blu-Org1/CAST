/*================================================================================

    csmi/include/csm_types/struct_defs/inv/csm_cluster_query_state_input.def

  Â© Copyright IBM Corporation 2015-2018. All Rights Reserved

    This program is licensed under the terms of the Eclipse Public License
    v1.0 as published by the Eclipse Foundation and available at
    http://www.eclipse.org/legal/epl-v10.html

    U.S. Government Users Restricted Rights:  Use, duplication or disclosure
    restricted by GSA ADP Schedule Contract with IBM Corp.

================================================================================*/

/**
 * CSMI_COMMENT
 * @brief An input wrapper for @ref csm_cluster_query_state.
 */

#ifndef CSMI_STRUCT_NAME
    #define CSMI_STRUCT_NAME csm_cluster_query_state_input_t
    
    #undef CSMI_BASIC              
    #undef CSMI_STRING             
    #undef CSMI_STRING_FIXED       
    #undef CSMI_ARRAY              
    #undef CSMI_ARRAY_FIXED        
    #undef CSMI_ARRAY_STR          
    #undef CSMI_ARRAY_STR_FIXED    
    #undef CSMI_STRUCT             
    #undef CSMI_ARRAY_STRUCT       
    #undef CSMI_ARRAY_STRUCT_FIXED 
    #undef CSMI_NONE  
    
    #define CSMI_BASIC               1
    #define CSMI_STRING              0
    #define CSMI_STRING_FIXED        0
    #define CSMI_ARRAY               0
    #define CSMI_ARRAY_FIXED         0
    #define CSMI_ARRAY_STR           0
    #define CSMI_ARRAY_STR_FIXED     0
    #define CSMI_STRUCT              0
    #define CSMI_ARRAY_STRUCT        0
    #define CSMI_ARRAY_STRUCT_FIXED  0
    #define CSMI_NONE                0
#endif 

// CSMI_STRUCT_MEMBER(type, name, serial_type, length_member, init_value, extra ) /**< comment */
CSMI_VERSION_START(CSM_DEVELOPMENT)

CSMI_STRUCT_MEMBER(int32_t          , limit     , BASIC , , -1              , ) /**< SQL 'LIMIT' numeric value. API will ignore values less than 1.*/
CSMI_STRUCT_MEMBER(int32_t          , num_allocs, BASIC , , -1              , ) /**< Filter query by the 'num_allocs' field in the database.. API will ignore values less than 0.*/
CSMI_STRUCT_MEMBER(int32_t          , offset    , BASIC , , -1              , ) /**< SQL 'OFFSET' numeric value. API will ignore values less than 1.*/
CSMI_STRUCT_MEMBER(char             , order_by  , BASIC , , '\0'            , ) /**< Used to alter 'ORDER BY'. API will ignore NULL values. Default to 'ORDER BY node_name ASC NULLS LAST'. VALID VALUES: [a] = 'ORDER BY node_name ASC NULLS LAST', [b] =  'ORDER BY node_name DESC NULLS LAST', [c] = 'ORDER BY state ASC NULLS LAST', [d] =  'ORDER BY state DESC NULLS LAST', [e] = 'ORDER BY type ASC NULLS LAST', [f] =  'ORDER BY type DESC NULLS LAST', [g] = 'ORDER BY num_allocs ASC NULLS LAST', [h] =  'ORDER BY num_allocs DESC NULLS LAST'. */
CSMI_STRUCT_MEMBER(csmi_node_state_t, state     , BASIC , , CSM_NODE_NO_DEF , ) /**< Query the 'state' field in the database. API will ignore @ref csmi_node_state_t::CSM_NODE_NO_DEF values for this fields, see @ref csmi_node_state_t for details.*/
CSMI_STRUCT_MEMBER(csmi_node_type_t , type      , BASIC , , CSM_NODE_NO_TYPE, ) /**< Query the 'type' field in the database. API will ignore @ref csmi_node_type_t::CSM_NODE_NO_TYPE values for this fields, see @ref csmi_node_type_t for details.*/

CSMI_VERSION_END(0)

#undef CSMI_VERSION_START
#undef CSMI_VERSION_END
#undef CSMI_STRUCT_MEMBER
