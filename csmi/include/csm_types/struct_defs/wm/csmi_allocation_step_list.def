/*================================================================================

    csmi/include/csm_types/struct_defs/wm/csmi_allocation_step_list.def

  Â© Copyright IBM Corporation 2015-2017. All Rights Reserved

    This program is licensed under the terms of the Eclipse Public License
    v1.0 as published by the Eclipse Foundation and available at
    http://www.eclipse.org/legal/epl-v10.html

    U.S. Government Users Restricted Rights:  Use, duplication or disclosure
    restricted by GSA ADP Schedule Contract with IBM Corp.

================================================================================*/


/**
 * CSMI_COMMENT
 * @brief A structure for tracking the nodes associated with a particular step of an allocation.
 */

#ifndef CSMI_STRUCT_NAME
    #define CSMI_STRUCT_NAME csmi_allocation_step_list_t
    
    #undef CSMI_BASIC              
    #undef CSMI_STRING             
    #undef CSMI_STRING_FIXED       
    #undef CSMI_ARRAY              
    #undef CSMI_ARRAY_FIXED        
    #undef CSMI_ARRAY_STR          
    #undef CSMI_ARRAY_STR_FIXED    
    #undef CSMI_STRUCT             
    #undef CSMI_ARRAY_STRUCT       
    #undef CSMI_ARRAY_STRUCT_FIXED 
    #undef CSMI_NONE  
    
    #define CSMI_BASIC               1
    #define CSMI_STRING              1
    #define CSMI_STRING_FIXED        0
    #define CSMI_ARRAY               0
    #define CSMI_ARRAY_FIXED         0
    #define CSMI_ARRAY_STR           0
    #define CSMI_ARRAY_STR_FIXED     0
    #define CSMI_STRUCT              0
    #define CSMI_ARRAY_STRUCT        0
    #define CSMI_ARRAY_STRUCT_FIXED  0
    #define CSMI_NONE                0
#endif 

// CSMI_STRUCT_MEMBER(type, name, serial_type, length_member, init_value, extra ) /**< comment */
CSMI_VERSION_START(CSM_VERSION_0_4_1)

CSMI_STRUCT_MEMBER(  int64_t, step_id      ,  BASIC, ,    0, ) /**< The unique identifier for the step. */
CSMI_STRUCT_MEMBER( uint32_t, num_nodes    ,  BASIC, ,    0, ) /**< Number of nodes in the step, size of @ref compute_nodes. */
CSMI_STRUCT_MEMBER( char*   , end_time     , STRING, , NULL, ) /**< The time at which the step entered history, **NULL** if the step is active. */
CSMI_STRUCT_MEMBER( char*   , compute_nodes, STRING, , NULL, ) /**< List of nodes the step is run on, size defined in @ref num_nodes. */


CSMI_VERSION_END(32672f9b716922d6b0322e7bcde7e665)
#undef CSMI_VERSION_START
#undef CSMI_VERSION_END
#undef CSMI_STRUCT_MEMBER

