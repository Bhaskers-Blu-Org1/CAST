/*================================================================================

    csmi/include/csm_types/struct_defs/inv/csm_node_attributes_query_input.def

  Â© Copyright IBM Corporation 2015-2017. All Rights Reserved

    This program is licensed under the terms of the Eclipse Public License
    v1.0 as published by the Eclipse Foundation and available at
    http://www.eclipse.org/legal/epl-v10.html

    U.S. Government Users Restricted Rights:  Use, duplication or disclosure
    restricted by GSA ADP Schedule Contract with IBM Corp.

================================================================================*/

/**
 * CSMI_COMMENT
 * @brief An input wrapper for @ref csm_node_attributes_query.
 */

#ifndef CSMI_STRUCT_NAME
    #define CSMI_STRUCT_NAME csm_node_attributes_query_input_t
    
    #undef CSMI_BASIC              
    #undef CSMI_STRING             
    #undef CSMI_STRING_FIXED       
    #undef CSMI_ARRAY              
    #undef CSMI_ARRAY_FIXED        
    #undef CSMI_ARRAY_STR          
    #undef CSMI_ARRAY_STR_FIXED    
    #undef CSMI_STRUCT             
    #undef CSMI_ARRAY_STRUCT       
    #undef CSMI_ARRAY_STRUCT_FIXED 
    #undef CSMI_NONE  
    
    #define CSMI_BASIC               1
    #define CSMI_STRING              1
    #define CSMI_STRING_FIXED        0
    #define CSMI_ARRAY               0
    #define CSMI_ARRAY_FIXED         0
    #define CSMI_ARRAY_STR           1
    #define CSMI_ARRAY_STR_FIXED     0
    #define CSMI_STRUCT              0
    #define CSMI_ARRAY_STRUCT        0
    #define CSMI_ARRAY_STRUCT_FIXED  0
    #define CSMI_NONE                0
#endif 

// CSMI_STRUCT_MEMBER(type, name, serial_type, length_member, init_value, extra ) /**< comment */
CSMI_VERSION_START(CSM_VERSION_0_4_1)

CSMI_STRUCT_MEMBER(int32_t         , limit           , BASIC    ,                 , -1              , ) /**< SQL 'LIMIT' numeric value. API will ignore values less than 1.*/
CSMI_STRUCT_MEMBER(int32_t         , offset          , BASIC    ,                 , -1              , ) /**< SQL 'OFFSET' numeric value. API will ignore values less than 1.*/
CSMI_STRUCT_MEMBER(uint32_t        , node_names_count, BASIC    ,                 , 0               , ) /**< Number of names to query, size of @ref node_names. */
CSMI_STRUCT_MEMBER(csm_bool        , ready           , BASIC    ,                 , CSM_UNDEF_BOOL  , ) /**< Deprecated after CSM_VERSION_0_4_1. Query the 'ready' field in the database. API will ignore @ref CSM_UNDEF_BOOL for this field.  Valid values: 0,1,2. API checks for invalid values and fails if invalid values are passed. Database description: Is the node ready for workload manager? ('y' or 'n') */
CSMI_STRUCT_MEMBER(char**          , node_names      , ARRAY_STR, node_names_count, NULL            , ) /**< List of nodes to perform query on, size defined in @ref node_names_count.*/
CSMI_STRUCT_MEMBER(char*           , comment         , STRING   ,                 , NULL            , ) /**< Query the 'comment' field in the database. API will ignore NULL values for this field. Database description: Comment field for system administrators.*/
CSMI_STRUCT_MEMBER(csmi_node_type_t, type            , BASIC    ,                 , CSM_NODE_NO_TYPE, ) /**< Query the 'type' field in the database. API will ignore @ref csmi_node_state_t::CSM_NODE_NO_TYPE values for this fields, see @ref csmi_node_state_t for details.*/

CSMI_VERSION_END(4cf7ee76bf90141f0253ae09b83a73a7)

CSMI_VERSION_START(CSM_VERSION_1_0_0)
CSMI_STRUCT_MEMBER(csmi_node_state_t, state, BASIC, , CSM_NODE_NO_DEF, ) /**< replacement for 'ready' after CSM_VERSION_0_4_1. Query the 'state' field in the database. API will ignore @ref CSM_NODE_NO_DEF for this field. API checks for invalid values and fails if invalid values are passed. State of the node, see @ref csmi_node_state_t for details. */
CSMI_VERSION_END(085fa1d7a93db4f4e46f454e46644186)

#undef CSMI_VERSION_START
#undef CSMI_VERSION_END
#undef CSMI_STRUCT_MEMBER
